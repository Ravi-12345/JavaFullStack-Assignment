Java Assignment-1
import java.util.Scanner;
class Student
{
public static void main(String args[])
{
int p=0,q=0,r=0,s=0;
do
{
Scanner sc=new Scanner(System.in);
System.out.println("Enter id");
int id=sc.nextInt();
int out1=10;
switch(id)
{
case 1:
        if(p==1)
        {
        System.out.println("Already Attempted");
        break;
        }
        else
       {
        p=1;
        System.out.println("1st Question is 1*3=?");
        Scanner one=new Scanner(System.in);
        int a1=one.nextInt();
        if(a1==3)
        {
          s=s+out1;
         }
         System.out.println("2nd Question is 2*3=?");
        //Scanner one=new Scanner(System.in);
        int a2=one.nextInt();
        if(a2==6)
        {
          s=s+out1;
         }
         System.out.println("3rd Question is 3*3=?");
        //Scanner one=new Scanner(System.in);
        int a3=one.nextInt();
        if(a3==9)
        {
          s=s+out1;
         }
        }
        break;
case 2: 
        if(q==1)
        {
        System.out.println("Already Attempted");
        break;
        }
        else
       {
        q=1;
        System.out.println("1st Question is 1*3=?");
        Scanner two=new Scanner(System.in);
        int b1=two.nextInt();
        if(b1==3)
        {
          s=s+out1;
         }
         System.out.println("2nd Question is 2*3=?");
        //Scanner two=new Scanner(System.in);
        int b2=two.nextInt();
        if(b2==6)
        {
          s=s+out1;
         }
         System.out.println("3rd Question is 3*3=?");
        //Scanner two=new Scanner(System.in);
        int b3=two.nextInt();
        if(b3==9)
        {
          s=s+out1;
         }
       }
        break;
case 3: 
        if(r==1)
        {
        System.out.println("Already Attempted");
        break;
        }
        else
       {
        r=1;
        System.out.println("1st Question is 1*3=?");
        Scanner three=new Scanner(System.in);
        int c1=three.nextInt();
        if(c1==3)
        {
          s=s+out1;
         }
         System.out.println("2nd Question is 2*3=?");
        //Scanner three=new Scanner(System.in);
        int c2=three.nextInt();
        if(c2==6)
        {
          s=s+out1;
         }
         System.out.println("3rd Question is 3*3=?");
        //Scanner three=new Scanner(System.in);
        int c3=three.nextInt();
        if(c3==9)
        {
          s=s+out1;
         }
        }
        break;
}
System.out.println("Do you want to continue y/n?");
Scanner yn=new Scanner(System.in);
char check=yn.next().charAt(0);
if(check=='y')
continue;
else
break;
}
while(p+q+r<3);
if(s>70)
{
s=s+10;
}
System.out.println(s);
}
}


Assignment-2
import java.util.Scanner;
class EmpDetails
{
public static void main(String args[])
{
Scanner sc=new Scanner(System.in);
System.out.println("Enter number of details you want to store:");
int n=sc.nextInt();

int []id= new int[n];
String []name=new String[n];
float []salary=new float[n];
String []desg=new String[n];

for(int i=0;i<n;i++)
{
System.out.println("Enter id of emp ");
id[i]=sc.nextInt();
sc.nextLine();

System.out.println("Enter name of emp");
name[i]=sc.nextLine();

System.out.println("Enter salary of emp");
salary[i]=sc.nextFloat();
sc.nextLine();

System.out.println("Enter designation of emp");
desg[i]=sc.nextLine();
System.out.println("\n");
}

for(int k=0;k<n;k++)
{
	float hra,da,pf;
	hra=salary[k]*0.1f;
	da=salary[k]*0.07f;
	pf=salary[k]*0.05f;
	if(desg[k].equals("manager"))
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.15f);
		System.out.println("\n");
		System.out.println("Details of Employee:"+(k+1));
		System.out.println("id="+id[k]);
		System.out.println("Name="+name[k]);
		System.out.println("Salary="+salary[k]);
		System.out.println("Designation="+desg[k]);
	}
	else if(desg[k].equals("developer"))
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.1f);
		System.out.println("\n");
		System.out.println("Details of Employee:"+(k+1));
		System.out.println("id="+id[k]);
		System.out.println("Name="+name[k]);
		System.out.println("Salary="+salary[k]);
		System.out.println("Designation="+desg[k]);
	}
	else
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.05f);
		System.out.println("\n");
		System.out.println("Details of Employee:"+(k+1));
		System.out.println("id="+id[k]);
		System.out.println("Name="+name[k]);
		System.out.println("Salary="+salary[k]);
		System.out.println("Designation="+desg[k]);
	}
}
}
}


Assignment -3
import java.util.Scanner;
class EmployeeDetails
{
Scanner sc=new Scanner(System.in);
int n;
EmployeeDetails(int size)
{
n=size;
id=new int [size];
name=new String [size];
salary=new float [size];
salarycpy=new float[size];
desg=new String [size];
}
int []id;
String []name;
float []salary;
float []salarycpy;
String []desg;
void read()
{
for(int i=0;i<n;i++)
{
System.out.println("Enter id of employee "+(i+1));
id[i]=sc.nextInt();
sc.nextLine();

System.out.println("Enter name of employee "+(i+1));
name[i]=sc.nextLine();

System.out.println("Enter salary of employee "+(i+1));
salary[i]=sc.nextFloat();
salarycpy[i]=salary[i];
sc.nextLine();
System.out.println("Enter designation of employee "+(i+1));
desg[i]=sc.nextLine();
System.out.println("\n");
}
}
void calsalary()
{
for(int k=0;k<n;k++)
{
	float hra,da,pf;
	hra=salary[k]*0.1f;
	da=salary[k]*0.07f;
	pf=salary[k]*0.05f;
	salary[k]=salary[k]+hra+da-pf;
}
}
void bonus()
{
for(int k=0;k<n;k++)
{
	salary[k]=salarycpy[k];
	float hra,da,pf;
	hra=salary[k]*0.1f;
	da=salary[k]*0.07f;
	pf=salary[k]*0.05f;
	if(desg[k].equals("manager"))
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.15f);
	}
	else if(desg[k].equals("developer"))
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.1f);
	}
	else
	{
		salary[k]=(salary[k]+hra+da-pf)+(salary[k]*0.05f);
	}
}	
}
void display()
{
for(int k=0;k<n;k++)
{
	System.out.println("Details of Employee:"+(k+1));
	System.out.println("id="+id[k]);
	System.out.println("Name="+name[k]);
	System.out.println("Salary="+salary[k]);
	System.out.println("Designation="+desg[k]);
	System.out.println("\n");
}	
}
}
class Employee
{
public static void main(String args[])
{
Scanner sc=new Scanner(System.in);
System.out.println("Enter Number of records you want to store:");
int x=sc.nextInt(); 
EmployeeDetails empd=new EmployeeDetails(x);
empd.read();
empd.calsalary();
empd.bonus();
empd.display();
}
}


Assignment-4
import java.util.Scanner;
class Employee
{
int id;
String name;
float salary;
Scanner obj=new Scanner(System.in);
Address add=new Address();
void read()
{
System.out.println("Enter id: ");
id=obj.nextInt();
System.out.println("Enter name: ");
obj.nextLine();
name=obj.nextLine();
System.out.println("Enter salary: ");
salary=obj.nextFloat();
}
void calSalary()
{
float hra,da,pf;
hra=salary*0.1f;
da=salary*0.07f;
pf=salary*0.05f;
salary=salary+hra+da-pf;
}
void display()
{
System.out.println("id= "+id);
System.out.println("name= "+name);
System.out.println("Salary= "+salary);
}
}
class Manager extends Employee
{
int nom;
void readMgr()
{
System.out.println("Enter number of managers: ");
nom=obj.nextInt();
add.readAdd();
}
void disMgr()
{
System.out.println("Enter number of managers: "+nom);
add.disAdd();
}
}
class Programmer extends Employee
{
String pname;
void readPrg()
{
System.out.println("Enter project name: ");
obj.nextLine();
pname=obj.nextLine();
add.readAdd();
}
void disPrg()
{
System.out.println("the project name: "+pname);
add.disAdd();
}
}
class Address
{
String city;
String state;
int pincode;
Scanner sc=new Scanner(System.in);
void readAdd()
{
System.out.println("Enter city name: ");
city=sc.nextLine();
System.out.println("Enter State name: ");
state=sc.nextLine();
System.out.println("Enter pincode: ");
pincode=sc.nextInt();
}
void disAdd()
{
System.out.println("City: "+city);
System.out.println("State: "+state);
System.out.println("pincode: "+pincode);
}
}
class EmployeeTest1
{
public static void main(String args[])
{
Manager mgr=new Manager();
mgr.read();
mgr.readMgr();
mgr.calSalary();
Programmer prg=new Programmer();
prg.read();
prg.readPrg();
prg.calSalary();
System.out.println("Manager Details --");
mgr.display();
mgr.disMgr();
System.out.println("Programmer Details--");
prg.display();
prg.disPrg();
}
}


Assignemnt-5
import java.util.Scanner;
class Student
{
int id,age;
String name;
int marks[]=new int[4];
int m1,m2,m3,m4;
float s=0;
Scanner sc=new Scanner(System.in);
char grade;
void read()
{
System.out.println("Enter id");
id=sc.nextInt();
System.out.println("Enter name");
name=sc.nextLine();
System.out.println("Enter age");
age=sc.nextInt();
System.out.println("Enter marks");
for(int i=0;i<marks.length;i++)
{
marks[i]=sc.nextInt();
s=s+marks[i];
}
}
void calculateGrade()
{
float avg;
avg=(s/4);
if(avg>90)
grade='A';
else if(avg>80)
grade='B';
else if(avg>70)
grade='C';
else if(avg>55)
grade='D';
else
grade='E';
}
void display()
{
System.out.println("id"+id);
System.out.println("name"+name);
System.out.println("age"+age);
System.out.println("grade"+grade);
}
}
class StudentTest
{
public static void main(String args[])
{
Scanner obj=new Scanner(System.in);
System.out.println("Enter number of records");
int n=obj.nextInt();
Student std[]=new Student[n];
for(int i=0;i<n;i++)
{
std[i]=new Student();
std[i].read();
}
for(int i=0;i<n;i++)
{
std[i].calculateGrade();
}
for(int i=0;i<n;i++)
{
std[i].display();
}
}
}


Assignment-6 (Mini project)
import java.util.Scanner;
class CustomException extends Exception
{
        CustomException(String msg)
	{
	super(msg);
	}
}
abstract class AccountInitialization
{
	static int acccount=0;
	int accno=1010;
	int amount;
	String name;
	Account ac[]=new Account[10];
	public void accountcreate() 
	{
		accno++;
		name="Unknown";
		amount=500;
		ac[acccount]= new Account(accno,name,amount);
		acccount++;
		System.out.println("Account created Successfully");			
	}
	public void accountcreate(String name,int amount) 
	{
		if(amount>500)
		{
			accno++;
			ac[acccount]= new Account(accno,name,amount);
			acccount++;
			System.out.println("Account created Successfully");	
		}
		else
		{
			System.out.println("Account rejected");
		}		
	}

	abstract void transfer(int fromaccno,int toaccno,int amount);

}

interface Bank 
{
		void withdraw(int accno,int amount);
		void deposit(int accno,int amount);
		void checkbalance(int accno);
}

class Account
{
		private int accno;
		private String name;
		private int amount; 
		Account(int accno,String name,int amount)
		{
			this.accno=accno;
			this.name=name;
			this.amount=amount;
		}
		public int getaccno()
		{
			return accno;
		}
		public void setaccno()
		{
		this.accno=accno;
		}
		public String getname()
		{
			return name;
		}
		public void setname()
		{
			this.name=name;
		}
		public int getamount()
		{
			return amount;
		}
		public void setamount(int amount)
		{
			this.amount=amount;
		}
	
}	

class MyBank extends AccountInitialization implements Bank {
	public void transfer(int fromaccno,int toaccno,int amount)
	{
	   int flag=0;
	   int flag1=0;
	   int flag2=0;
	   
		for(int i=0;i<acccount;i++)
		{
			if(fromaccno==ac[i].getaccno())
			{
				flag=1;
				if(ac[i].getamount()<amount)
				{
					flag2=1;
					System.out.println("Insufficient balance for transferring");
				}
					
			}
		}
	   
	 	try
		{
			if(flag==0)
			{
			throw new CustomException("From account number not found");
			}
		}
		catch(Exception e){
		System.out.println(e.toString());
	        }
		for(int i=0;i<acccount;i++)
		{
			if(toaccno==ac[i].getaccno())
			{
				flag1=1;
					
			}
		}
		try
		{
			if(flag1==0)
			{
				throw new CustomException("To account number not found");
			}
		}
		catch(Exception e)
		{
		System.out.println(e.toString());
	        }
		if(flag1==1&&flag==1&&flag2==0)
		{
			for(int i=0;i<acccount;i++)
			{

			if(toaccno==ac[i].getaccno())
			{
				
				ac[i].setamount(ac[i].getamount()+amount);
			}
			if(fromaccno==ac[i].getaccno())
			{
				
				ac[i].setamount(ac[i].getamount()-amount);
				try{
					if(ac[i].getamount()<500)
					{
						throw new CustomException("Maintain minimum balance 500");
					}
				   }
				catch(Exception e){
					System.out.println(e.toString());
	        		  }
				
				}
			}
			if(flag2==0)
			{
			System.out.println("Transfer Transaction done successfully");
			}
		}
	}

	public void withdraw(int accno,int amount){
	int flag=0;
	try{
		for(int i=0;i<acccount;i++)
		{
			if(accno==ac[i].getaccno())
			{
				flag=1;
				if(ac[i].getamount()<amount)
				{
						
					System.out.println("Amount not available");
				}
				else
				{	
					ac[i].setamount(ac[i].getamount()-amount);
					System.out.println("Withdraw Transaction done successfully");
					if(ac[i].getamount()<500)
					{
						throw new CustomException("Maintain minimum balance 500");
					}
				}
			}
		}
	}
	catch(Exception e){
		System.out.println(e.toString());
	}
		try
		{
			if(flag==0)
			{
				throw new CustomException("Account number incorrect");
			}
		}
		catch(Exception e)
		{
		System.out.println(e.toString());
	        }
	}
		

	public void deposit(int accno,int amount){
		int flag=0;
		int flag1=0;
		for(int i=0;i<acccount;i++)
		{
			if(accno==ac[i].getaccno())
			{
				flag=1;
				if(amount>49999)
				{
					flag1=1;
					System.out.println("Cannot deposit more than 50000");
				}
				ac[i].setamount(ac[i].getamount()+amount);
				if(flag==1&&flag1==0)
				{
				System.out.println("Deposit Transaction done successfully");
				}
			}
		}
		try
		{
			if(flag==0)
			{
			throw new CustomException("Account number incorrect");
			}
		}
		catch(Exception e)
		{
		System.out.println(e.toString());
	        }
		
	}


	public void checkbalance(int accno){
		int flag=0;
		for(int i=0;i<acccount;i++)
		{
			if(accno==ac[i].getaccno())
			{
				flag=1;
				System.out.println("Available Balance is "+ac[i].getamount());
			}
		}
		try
		{
			if(flag==0)
			{
				throw new CustomException("Account number incorrect");
			}
		}
		catch(Exception e)
		{
		System.out.println(e.toString());
	        }
	}
}
		
class BankApp{
	public static void main(String args[])
	{
		int accno,amount,fromaccno,toaccno,var;
		
		System.out.println("Choose any option");
	
		MyBank mb=new MyBank();
	
	do{
		Scanner sc=new Scanner(System.in);
		System.out.println("\n1.create account with Default details\n2.user defined account creation\n3.Check Account Balance\n4.Withdraw the amount\n5.Deposit\n6.Transfer\n7.Exit the Application\n ");
		var=sc.nextInt();
		switch(var){
		case 1:  mb.accountcreate();
			 break;
		case 2: sc.nextLine(); 
			System.out.println("Enter name");
			 String name=sc.nextLine();
			 System.out.println("Enter amount greater than 500");
			 amount=sc.nextInt();
			sc.nextLine();
			//System.out.println("Enter name");
			 
			 mb.accountcreate(name,amount);
			 break;		
		case 3:  System.out.println("Enter account number");
			 accno=sc.nextInt();
			 mb.checkbalance(accno);
			 break;
		case 4:  System.out.println("Enter account number");
			 accno=sc.nextInt();
			 System.out.println("Enter amount ");
			 amount=sc.nextInt();
			 mb.withdraw(accno,amount);
			 break;
		case 5:  System.out.println("Enter account number");
			 accno=sc.nextInt();
			 System.out.println("Enter amount ");
			 amount=sc.nextInt();
			 mb.deposit(accno,amount);
			 break;	
		case 6:  System.out.println("Enter from account number");
			 fromaccno=sc.nextInt();
			 System.out.println("Enter to account number");
			 toaccno=sc.nextInt();
			 System.out.println("Enter amount ");
			 amount=sc.nextInt();
			 mb.transfer(fromaccno,toaccno,amount);
			 break;	
		case 7:  System.exit(0);
		default: System.out.println("Please choose correct option");
		
		}
		}while(var<=7);
}
}



Assignment-7
import java.util.Arrays;
import java.util.Scanner;
 
public class Sorting
{
    public static void main(String[] args) 
    {
        int n;
        String name;
        Scanner s = new Scanner(System.in);
         
        
        System.out.print("Enter number of strings : ");
        n = s.nextInt();
         
         
        String str[] = new String[n];
       
         
  
        System.out.println("Enter the Strings one by one:");
	s.nextLine();
        for(int i = 0; i < n; i++)
        {
            str[i] = s.nextLine();
        }
      
        
        
        for (int i = 0; i < n; i++) 
        {
            for (int j = i + 1; j < n; j++) 
            { 
                if (str[i].compareTo(str[j]) > 0) 
                {
                    name = str[i];
                    str[i] = str[j];
                    str[j] =name ;
                }
            }
        }
         
       
        System.out.print("Strings in Sorted Order: " + Arrays.toString(str));
    }
}


Assignment-8
import java.util.*;
import java.lang.*;
import java.io.*;
class Student
{
    int rollno;
    String name;
    float salary;
 
    public Student(int rollno, String name,
                               float salary)
    {
        this.rollno = rollno;
        this.name = name;
        this.salary = salary;
    }
 
    public String toString()
    {
        return this.rollno + " " + this.name +
                           " " + this.salary;
    }
}
 
class Sortbyroll implements Comparator<Student>
{
   
    public int compare(Student a, Student b)
    {
        return a.rollno - b.rollno;
    }
}
 
class Sortbyname implements Comparator<Student>
{
    public int compare(Student a, Student b)
    {
        return a.name.compareTo(b.name);
    }
}
class Sortbysalary implements Comparator<Student>
{
    
    public int compare(Student a, Student b)
    {
        return (int)(a.salary - b.salary);
    }
}
 

class Main
{
    public static void main (String[] args)
    {
        ArrayList<Student> ar = new ArrayList<Student>();
        ar.add(new Student(111, "bbbb", 30000));
        ar.add(new Student(131, "aaaa", 20000));
        ar.add(new Student(121, "cccc", 50000));
 
        System.out.println("Unsorted");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
 
        Collections.sort(ar, new Sortbyroll());
        System.out.println("\nSorted by Id Asd");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
        Collections.reverse(ar);
        System.out.println("\nSorted by Id Desc");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
 
        Collections.sort(ar, new Sortbyname());
        System.out.println("\nSorted by name Asc");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
        Collections.reverse(ar);
        System.out.println("\nSorted by name Desc");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
        
        Collections.sort(ar, new Sortbysalary());
        System.out.println("\nSorted by Salary Asc");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
        Collections.reverse(ar);
        System.out.println("\nSorted by Salary Desc");
        for (int i=0; i<ar.size(); i++)
            System.out.println(ar.get(i));
    }
}


Assignment-9
package com;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.BufferedReader;
public class File {

   
	public static void main(String[] args) throws Exception{
		FileInputStream fis = new FileInputStream("C:\\Users\\MYPC\\OneDrive\\Desktop\\Ravi\\status.txt");
		//DataInputStream dis=new DataInputStream(fis);
		InputStreamReader input = new InputStreamReader(fis); 
        BufferedReader reader = new BufferedReader(input);
		
		
	
		int ch;
		String line;
		int countWord=0;
		int characterCount=0;
		
	   while((line = reader.readLine()) != null) 
        { 
           
                characterCount += line.length(); 
                  
                // \\s+ is the space delimiter in java 
                String[] wordList = line.split("\\s+"); 
                  
                countWord += wordList.length; 
        } 
		
		System.out.println("Total number of characters = " + characterCount);
		System.out.println("Total word count = " + countWord); 
		FileInputStream fis2 = new FileInputStream("C:\\Users\\MYPC\\OneDrive\\Desktop\\Ravi\\status.txt");
		FileOutputStream fos = new FileOutputStream("info1.txt");
		FileOutputStream fos1 = new FileOutputStream("info2.txt");
		while((ch=fis2.read()) != -1){	//'a' or '@' EOF in java -1 is consider as EOF 
			fos.write(Character.toUpperCase(ch));
			fos1.write(Character.toLowerCase(ch));
			
		}
		
		fis.close();
		fis2.close();
		fos.close();
		fos1.close();
		
		System.out.println("File copied...");
	}

}

Sprint-1


Product.java

package bean;

public class Product {
private int pid;
private String pname;
private int price;
public int getPid() {
	return pid;
}
public void setPid(int pid) {
	this.pid = pid;
}
public String getPname() {
	return pname;
}
public void setPname(String pname) {
	this.pname = pname;
}
public int getPrice() {
	return price;
}
public void setPrice(int price) {
	this.price = price;
}

@Override
public String toString() {
	return "Product [pid=" + pid + ", pname=" + pname + ", price=" + price + "]";
}
public Product(int pid, String pname, int price) {
	super();
	this.pid = pid;
	this.pname = pname;
	this.price = price;
}
public Product() {
	super();
	// TODO Auto-generated constructor stub
}	
}

ProductOperation.java

package operation;
import java.awt.List;
import java.util.ArrayList;
import java.util.Scanner;
import bean.Product;
import service.ProductService;
public class ProductOperation {
	public static void main(String[] args) throws Exception {
		ProductService ps = new ProductService();
		// TODO Auto-generated method stub
		int var;	
		do {
			
			ArrayList<Product> l=new ArrayList<Product>();
			//Product p;
			Scanner sc=new Scanner(System.in);
			System.out.println("1.Add\n2.Update\n3.Delete\n4.DisplayAll\n5.price using id\n6.exit");
			System.out.println("choose one option");
			var=sc.nextInt();
			switch(var) {
			case 1: System.out.println("enter product details id");
					int id3=sc.nextInt();
					sc.nextLine();
					System.out.println("enter product detail name");
					String pname=sc.nextLine();
					System.out.println("enter product details like price");
					int price=sc.nextInt();
					int q=ps.addproduct(id3,pname,price);
					if(q==1)
					{
						System.out.println("you are entering a duplicate id");
					}
					else
					{
						System.out.println("product added successfully");
					}
					break;
			case 2: System.out.println("enter product id ");
					int id=sc.nextInt();
					System.out.println("enter  price ");
					int price1=sc.nextInt();
					int b=ps.update(id, price1);
					if(b==1)
					{
						System.out.println("product updated successfully");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 3: System.out.println("enter index value of product id to delete");
					int id1=sc.nextInt();
					int c=ps.delete(id1);
					if(c==1)
					{
						System.out.println("product deleted successfully");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 4:System.out.println("products details");
			       l=ps.displayall();
			       for(Product a:l)
			       {
			    	   System.out.println(l.indexOf(a)+":"+ a);
			       }
			       break;
			case 5:System.out.println("enter product id to view the price");
			       int id2=sc.nextInt();
			       int d=ps.retrieve(id2);
			       if(d>0)
			       {
			    	   System.out.println("product price is "+d);   
			       }
			       else
			       {
			    	   System.out.println("product not found");
			       }
			       
			       break;
			case 6:System.exit(0);
			
			default: System.out.println("enter valid option");       
			
			}
					
		}while(var<=6);
	}
}

ProductService.java

package service;

import java.util.ArrayList;
import java.util.List;
import bean.Product;
public class ProductService{
		ArrayList<Product> ll=new ArrayList<Product>();	
		Product p;
		int i=0;
		
		
		public int addproduct(int id,String Pname,int price) throws Exception {
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
		   if(flag==0)		
				{
					p=new Product(id,Pname,price);
					ll.add(p);
					return 0;
				}
		   else {
			   return 1;
		   
			}
			
		}
		public int update(int id,int price) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
					p.setPrice(price);
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)		
				{
					
					return 1;
				}
			else
				return 0;
		}
		public int delete(int id) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
					int x=ll.indexOf(p);
					ll.remove(x);
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		public ArrayList<Product> displayall()
		{
			return ll;
		}
		public int retrieve(int id)
		{
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					return p.getPrice();	
				}
			}
			return 0;
		}
}


Sprint-2

Product.java

package bean;
import java.io.Serializable;
public class Product implements Serializable {
private int pid;
private String pname;
private int price;
public int getPid() {
	return pid;
}
public void setPid(int pid) {
	this.pid = pid;
}
public String getPname() {
	return pname;
}
public void setPname(String pname) {
	this.pname = pname;
}
public int getPrice() {
	return price;
}
public void setPrice(int price) {
	this.price = price;
}
public Product() {
	super();
	// TODO Auto-generated constructor stub
}
public Product(int pid, String pname, int price) {
	super();
	this.pid = pid;
	this.pname = pname;
	this.price = price;
}
@Override
public String toString() {
	return "Product [pid=" + pid + ", pname=" + pname + ", price=" + price + "]";
}
}

ProductOperation.java

package operation;
import java.awt.List;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Scanner;
import bean.Product;
import service.ProductService;
public class ProductOperation implements Serializable{
	public static void main(String[] args) throws Exception {
		ProductService ps = new ProductService();
		// TODO Auto-generated method stub
		int var;	
		do {
			
			ArrayList<Product> l=new ArrayList<Product>();
			//Product p;
			Scanner sc=new Scanner(System.in);
			System.out.println("1.Add\n2.Update\n3.Delete\n4.DisplayAll\n5.price using id\n6.exit");
			System.out.println("choose one option");
			var=sc.nextInt();
			switch(var) {
			case 1: System.out.println("enter product details id");
					int id3=sc.nextInt();
					sc.nextLine();
					System.out.println("enter product detail name");
					String pname=sc.nextLine();
					System.out.println("enter product details like price");
					int price=sc.nextInt();
					int q=ps.addproduct(id3,pname,price);
					if(q==1)
					{
						System.out.println("you are entering a duplicate id");
					}
					else
					{
						System.out.println("product added successfully");
						System.out.println("Object Serialized");
					}
					break;
			case 2: System.out.println("enter product id ");
					int id=sc.nextInt();
					System.out.println("enter  price ");
					int price1=sc.nextInt();
					int b=ps.update(id, price1);
					if(b==1)
					{
						System.out.println("product updated successfully");
						System.out.println("Object Serialized");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 3: System.out.println("enter index value of product id to delete");
					int id1=sc.nextInt();
					int c=ps.delete(id1);
					if(c==1)
					{
						System.out.println("product deleted successfully");
						System.out.println("Object Serialized");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 4:System.out.println("products details");
			       l=ps.displayall();
			       try {
			   		FileInputStream fis = new FileInputStream("product1.txt"); 
			   			 ObjectInputStream ois = new ObjectInputStream(fis); 
			   			 Object obj = ois.readObject(); 
			   			 Product p=(Product)obj;
			   			for(Product a:l)
						 {
			   				System.out.println(a.getPid()+","+a.getPname()+","+a.getPrice());
						 }
			   			 System.out.println("Object De-Seriliazed"); 
			   			 ois.close();
			   			 fis.close();
			   			} 
			       catch (Exception e) {
			   		System.err.println(e.toString());
			   		} 
			       break;
			case 5:System.out.println("enter product id to view the price");
			       int id2=sc.nextInt();
			       int d=ps.retrieve(id2);
			       if(d>0)
			       {
			    	   System.out.println("product price is "+d);   
			       }
			       else
			       {
			    	   System.out.println("product not found");
			       }
			       
			       break;
			case 6:System.exit(0);
			
			default: System.out.println("enter valid option");
			       
			
			}
					
		}while(var<=6);
	}
}

ProductService.java

package service;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import bean.Product;
public class ProductService implements Serializable{
		/**
	 * 
	 */
	private static final long serialVersionUID = -4048523558536427746L;
		ArrayList<Product> ll=new ArrayList<Product>();
		FileOutputStream fosd;
		ObjectOutputStream oos;
		Product p;
		
		
		
		public int addproduct(int id,String Pname,int price) throws Exception {
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
		   if(flag==0)		
				{
					try {
						p=new Product(id,Pname,price);
						ll.add(p);
						fosd =new FileOutputStream("product1.txt",true);
						oos=new ObjectOutputStream(fosd);
						oos.writeObject(p);
					} catch (Exception e) {
				
						System.err.println(e.toString());
					}
					return 0;
				}
		   else
		     {
			   return 1;
		   
			}
			
		}
		public int update(int id,int price) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
					p.setPrice(price);
					fosd =new FileOutputStream("product1.txt",true);
					oos=new ObjectOutputStream(fosd);
					oos.writeObject(p);
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)		
				{
					
					return 1;
				}
			else
				return 0;
		}
		public int delete(int id) throws Exception
		{
			int flag=0;
			try {
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					flag=1;
					int x=ll.indexOf(p);
					ll.remove(x);
					fosd=new FileOutputStream("product1.txt",true);
					oos=new ObjectOutputStream(fosd);
					oos.writeObject(p);
					oos.close();
					fosd.close();
				}
			}
			}
			catch(Exception e)
			{
				System.err.println(e.toString());
			}
			if(flag==1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		public ArrayList<Product> displayall()
		{
			return ll;
		}
		public int retrieve(int id)
		{
			for(Product p:ll)
			{
				if(id==p.getPid())
				{
					return p.getPrice();	
				}
			}
			return 0;
		}
		
}

Sprint-3

Product.java
package bean;
import java.time.LocalDate;
public class Product {
private int pid;
private String pname;
private float pprice;
//private LocalDate storedate;
public Product() {
	super();
	// TODO Auto-generated constructor stub
}
public int getPid() {
	return pid;
}
public void setPid(int pid) {
	this.pid = pid;
}
public String getPname() {
	return pname;
}
public void setPname(String pname) {
	this.pname = pname;
}
public float getPprice() {
	return pprice;
}
public void setPprice(float pprice) {
	this.pprice = pprice;
}
///public LocalDate getStoredate() {
//	return storedate;
//}
//public void setStoredate(LocalDate storedate) {
//	this.storedate = storedate;
//}
public Product(int pid, String pname, float pprice, LocalDate storedate) {
	super();
	this.pid = pid;
	this.pname = pname;
	this.pprice = pprice;
	//this.storedate = storedate;
}
@Override
public String toString() {
	return "Product [pid=" + pid + ", pname=" + pname + ", pprice=" + pprice + "]";
}
}

Dao.java

package daolayer;

import java.sql.Connection;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import bean.Product;

public class Dao  {
	List<Product> ll=new ArrayList<>();
	
	
	public int addproductdao(Product p)
	{
		int r = 0;
		
		try {
			Class.forName("com.mysql.cj.jdbc.Driver");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "Ink@2120");
			 PreparedStatement ps=con.prepareStatement("insert into product1 values(?,?,?)");
    		 int pid=p.getPid();
    		 String pname=p.getPname();
    		 float pprice=p.getPprice();
    		 ps.setInt(1,pid);
    		 ps.setString(2,pname);
    		ps.setFloat(3,pprice);
    		r=ps.executeUpdate();
		}
		catch(Exception e)
		{
			System.err.println(e.toString());
		}
		return r;
		
		}
	
	public int deleteProductdao(int id)
	{
		int r;
		try {
		Class.forName("com.mysql.cj.jdbc.Driver");
		Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "Ink@2120");
		PreparedStatement ps=con.prepareStatement("delete from product1 where pid=?");
		ps.setInt(1, id);
		r=ps.executeUpdate();
		}
		catch(Exception e)
		{
			System.err.println(e.toString());
		}
		return 1;
	}
	public int updateproductdao(int id,float price)
	{
		int r;
		try {
		Class.forName("com.mysql.cj.jdbc.Driver");
		Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "Ink@2120");
		PreparedStatement ps=con.prepareStatement("update product1 set pprice=? where pid=?");
		ps.setFloat(1, price);
		ps.setInt(2, id);
		r=ps.executeUpdate();
		
		}
		catch(Exception e)
		{
			System.err.println(e.toString());
		}
		return 1;
	}
	public List<Product> getdetails()
	{
		int r;
		try {

			Class.forName("com.mysql.cj.jdbc.Driver");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "Ink@2120");
			PreparedStatement ps = con.prepareStatement("select * from product1");
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				Product p = new Product();
				p.setPid(rs.getInt(1));
				p.setPname(rs.getString(2));
				p.setPprice(rs.getFloat(3));
				//p.setStoredate(rs.getDate(4).toLocalDate());     
				ll.add(p);
				
			}
		} catch (Exception e) {
			System.err.println(e.toString());
		}
		return ll;
	
	}
	
	public float getprice(int id)
	{
		float val = 0;
		try {

			Class.forName("com.mysql.cj.jdbc.Driver");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "Ink@2120");
			PreparedStatement ps = con.prepareStatement("select pprice from product1 where pid=?");
			ps.setInt(1, id);
			ResultSet rs = ps.executeQuery();
			rs.next();
			val=rs.getFloat(1);
			
			}
		 catch (Exception e) {
			 System.err.println(e.toString());
		 }
		return val;
				
	}
}

ProductOperation.java

package operation;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;
import bean.Product;
import daolayer.Dao;
import service.ProductService;

public class ProductOperation {

	public static void main(String[] args) throws Exception {
		ProductService ps = new ProductService();
		Product p ;
		List<Product> l=new ArrayList<Product>();
		Dao dao=new Dao();
		
		int var;	
		do {
			
			Scanner sc=new Scanner(System.in);
			System.out.println("1.Add\n2.Update\n3.Delete\n4.DisplayAll\n5.get price using id\n6.dispaly Products in low price\n7.dispaly Products in high price\n8.dispaly Products in asc of name\n9.dispaly Products in desc of name\n10. exit");
			System.out.println("choose one option");
			var=sc.nextInt();
			switch(var) {
			case 1: System.out.println("enter product details id");
					p=new Product();
					p.setPid(sc.nextInt());
					sc.nextLine();
					System.out.println("enter product detail name");
					p.setPname(sc.nextLine());
					System.out.println("enter product details like price");
					p.setPprice(sc.nextInt());
				//	System.out.println("enter product details like storedate");
				//	String d=sc.next();
				//	LocalDate ld=LocalDate.parse(d);
				//	p.setStoredate(ld);
					
					int q=ps.addproduct(p);
				//	if(p.getPprice()>500)
				//	{
				//		dao.addproductdao(p);
				//	}
					if(q==0)
					{
						System.out.println("you are entering product price less than 500");
					}
					else
					{
						System.out.println("product added successfully");
					}
					break;
			case 2: System.out.println("enter product id ");
					int id=sc.nextInt();
					System.out.println("enter  price ");
					int price1=sc.nextInt();
					int b=ps.update(id, price1);
					if(b==1)
					{
						System.out.println("product updated successfully");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 3: System.out.println("enter product id to delete");
					int id1=sc.nextInt();
					int c=ps.delete(id1);
					if(c==1)
					{
						System.out.println("product deleted successfully");
					}
					else
					{
						System.out.println("product not found");
					}
					break;
			case 4:System.out.println("products details");
			       l=ps.displayall();
			       l.stream().forEach(e->System.out.println(e.getPid()+","+e.getPname()+","+e.getPprice()*.2+e.getPprice()));
			       break;
			case 5:System.out.println("enter product id to view the price");
			       int id2=sc.nextInt();
			       float d1=ps.retrieve(id2);
			       if(d1>0)
			       {
			    	   System.out.println("product price is "+d1);   
			       }
			       else
			       {
			    	   System.out.println("product not found");
			       }
			       
			       break;
		   case 6:l.stream().map(e->e.getPprice()).sorted().forEach(v->System.out.println(v));
		   		  break;
		   case 7:l.stream().map(e->e.getPprice()).sorted(Comparator.reverseOrder()).forEach(v->System.out.println(v));
		   		  break;
		   case 8:l.stream().map(e->e.getPname()).sorted().forEach(v->System.out.println(v));
		   		  break;
		   case 9:l.stream().map(e->e.getPname()).sorted(Comparator.reverseOrder()).forEachOrdered(v->System.out.println(v));
		   		  break;
			case 10:System.exit(0);
						
			default: System.out.println("enter valid option");       
			
			}
					
		}while(var<=10);
	}

}

ProductService.java

package service;

import java.util.ArrayList;
import java.util.List;

import bean.Product;
import daolayer.Dao;

public class ProductService {
	 List<Product> l=new ArrayList<>();
	 Dao d=new Dao();
	 
     public int addproduct(Product q)
     {
    	 int res;
    	 if(q.getPprice()>500)
    	 {
    		
    		res=d.addproductdao(q);
    		if(res>0)
    		{
    		return 1;
    		}
    		 else
        	 {
        		return 0; 
        	 }		 
    	 }
    	 else
    	 {
    		return 0; 
    	 }
    	  	 
     }
     public int update(int id,int price) throws Exception
		{
			int flag=0;
			flag=d.updateproductdao(id, price);
			if(flag==1)		
				{
					
					return 1;
				}
			else
				return 0;
		}
		public int delete(int id) throws Exception
		{
			int flag=0;
			flag=d.deleteProductdao(id);
			if(flag==1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		public List<Product> displayall()
		{
			l=d.getdetails();
			return l;
		}
		public float retrieve(int id)
		{
			float price=d.getprice(id);
			return price;
		}

}





   